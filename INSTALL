ORCAtk Installation Instructions
--------------------------------

Installation instructions for ORCAtk. Please also see the DEPENDENCIES file
for a list of prerequisite databases, programs and libraries that are required
by ORCAtk. These instructions assume a linux environment with an apache web
server. It should be possible to install ORCAtk in another environment but
this has not been tested.

1) Compile and install the C programs, nwalign and align_cons under the
   bin sub-directory. Follow the instructions in the INSTALL files under
   the bin/nwalign and bin/align_cons sub-directories.

2) For web-based ORCAtk, set up symbolic links from your webserver htdocs and
   cgi-bin directories. For example if you have installed ORCAtk under a
   directory /apps then assuming you are using the Apache server installed in
   /usr/local/apache you would use something like the following:

    $ ln -s /apps/ORCAtk/cgi-bin /usr/local/apache/cgi-bin/ORCAtk
    $ ln -s /apps/ORCAtk/htdocs /usr/local/apache/htdocs/ORCAtk

   You may have to edit your apache config file (httpd.conf) to allow following
   of symbolic links and executing cgi-bin files, e.g.:
    <Directory "/usr/local/apache/cgi-bin">
        AllowOverride FileInfo
        Options FollowSymLinks +ExecCGI +Includes
        Order allow,deny
        Allow from all
    </Directory>

   Alternatively, of course you could copy the ORCAtk htdocs and cgi-bin
   directories directly into the apache tree.

3) For web-based ORCAtk, create the following directories:
       htdocs/tmp
       log

   Change the ownership of these directories to that of the user that the
   web server runs under and/or make these directories at least
   read/write/executable to to that user, e.g:

       chown apache:apache htdocs/tmp
       chmod 700 htdocs/tmp

4) For web-based ORCAtk, copy the main CGI sample script cgi-bin/orca.sample
   to cgi-bin/orca.

   Edit the "use lib" line to reflect the path to the ORCAtk lib directory.

   Copy the html/index.html.sample file to html/index.html and edit the
   '<body onload' line to reflect the correct html path to the location of
   the above CGI script.

   Copy the sample configuration file Options.pm.sample under the lib/ORCA/Web
   subdirectory to Options.pm and edit the constants to reflect your
   installation. Specifically you should edit the ORCA_HOME constant to point
   to the directory under which ORCAtk is installed.
   
   Edit the paths to the various installed libraries and modules
   (ENSEMBL_LIB etc.) and the absolute paths to htdocs and cgi-bin.

   Edit the SPECIES_TRACK_NAMES hash which maps species name to the name of
   the corresponding UCSC phastCons track/table name. This also controls for
   which species ORCAtk support multi-species analysis.

   Edit the various DB constants to reflect the connection parameters to each
   of the databases (Ensembl, JASPAR, UCSC etc).

   It is possible to edit other values to reflect different default values
   for the ORCAtk analysis.

5) The hgWiggle program used by ORCAtk to retrieve phastCons scores requires
   a configuration file specifying the UCSC database connection parameters.
   For web-based ORCAtk this configuration file is called hg.conf and must be
   created in the ORCAtk/cgi-bin and configured to reflect your specific
   UCSC database installation. Copy cgi-bin/hg.conf.sample to cgi-bin/hg.conf
   and edit it to reflect the database connection parameters required to
   access your local UCSC DB configuration.

   An example of the contents of this file is:

       db.host=vm5.cmmt.ubc.ca
       db.user=ucsc_r
       db.password=
       browser.documentRoot=/usr/local/apache/htdocs

   NOTE: the permissions of the hg.conf file should be set to 600.

   If you are running the stand-alone phastCons analysis script you must
   also create the file '.hg.conf' (in this case, note the leading '.') in
   your home directory. It is also necessary to change the mode of this file
   to 600, e.g.:
   	chmod 600 ~/.hg.conf

5) For web-based ORCAtk, create a log directory under the ORCAtk home dir, e.g.:
	mkdir ORCAtk/log

   Change the ownership of this log directory to apache (or whatever user/group
   your web server runs under), e.g.:
   	sudo chown apache:apache ORCAtk/log

   For extra security it might be a good idea to set restrictive permissions
   on this directory, e.g.:
   	sudo chmod 700 ORCAtk/log
   directory

6) For web-based ORCAtk, create a temporary directory 'tmp' under the ORCAtk
   htdocs dir, e.g.:
   	mkdir ORCAtk/htdocs/tmp

   Change the ownership/permissions of this directory as per the log directory
   above.
